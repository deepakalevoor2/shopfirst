{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares), composeEnhancers(applyMiddleware(reduxThunk)));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistStore\n};","map":{"version":3,"sources":["C:/Users/Deepak/react_course/crwn-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","reduxThunk","persistStore","logger","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CV,OAAxE;AACA,MAAMW,WAAW,GAAG,CAACJ,cAAD,CAApB;;AAEA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBZ,MAAjB;AACD;;AAED,OAAO,MAAMa,KAAK,GAAGlB,WAAW,CAC9BO,WAD8B,EAE9BN,eAAe,CAAC,GAAGY,WAAJ,CAFe,EAG9BH,gBAAgB,CAACT,eAAe,CAACE,UAAD,CAAhB,CAHc,CAAzB;AAMPM,cAAc,CAACU,GAAf,CAAmBX,QAAnB;AAEA,OAAO,MAAMY,SAAS,GAAGhB,YAAY,CAACc,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASd,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\nimport rootSaga from \"./root-saga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(...middlewares),\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistStore };\r\n"]},"metadata":{},"sourceType":"module"}