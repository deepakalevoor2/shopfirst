{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deepak\\\\react_course\\\\crwn-clothing\\\\client\\\\src\\\\pages\\\\scanner\\\\scanner.component.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\nimport Scan from \"../../components/scan/scan.component.jsx\";\nimport { addItem } from \"../../redux/cart/cart.actions\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\n\nclass ScannerPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scanning: false,\n      results: null\n    };\n\n    this._scan = () => {\n      this.setState({\n        scanning: !this.state.scanning\n      });\n    };\n\n    this._onDetected = result => {\n      //this.setState({ results: this.state.results.concat([result]) });\n      //this.setState({ results: result.codeResult.code });\n      // async function asyncFunc() {\n      //   try {\n      //     // fetch data from a url endpoint\n      //     const response = await axios.get(\n      //       \"http://localhost:5000/scan/\" + result.codeResult.code\n      //     );\n      //     return response;\n      //   } catch (error) {\n      //     alert(error); // catches both errors\n      //   }\n      // }\n      // asyncFunc().then((res) => this.setState({ item: res.data.data }));\n      const getProduct = async () => {\n        try {\n          const response = await axios.get(\"http://localhost:5000/scan/\" + result.codeResult.code);\n          const items = response.json();\n          return items;\n        } catch (error) {\n          alert(error); // catches both errors\n        }\n      };\n\n      getProduct.then(res => addItem(res.data)); // let response = \"\";\n      // console.log(response);\n      // async function f() {\n      //   const response = await axios.get(\n      //     \"http://localhost:5000/scan/\" + result.codeResult.code\n      //   );\n      //   console.log(response);\n      // }\n      // response = f();\n      // console.log(response.data);\n      // addItem(response.data);\n      // fetch(\"http://localhost:5000/scan/\" + result.codeResult.code)\n      //   .then((res) => {\n      //     if (res.status !== 200) {\n      //       throw new Error(\"Failed to fetch status\");\n      //     }\n      //     return res.json();\n      //   })\n      //   .then((resData) => {\n      //     //addItem(item);\n      //     this.setState({ item: resData });\n      //   })\n      //   .catch((err) => {\n      //     console.log(err);\n      //   });\n      //this.setState({ results: result.codeResult.code });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: this._scan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, this.state.scanning ? \"Stop\" : \"Start\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, this.state.results), this.state.scanning ? /*#__PURE__*/React.createElement(Scan, {\n      onDetected: this._onDetected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 32\n      }\n    }) : null);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n}); //export default ScannerPage;\n//export default connect(null, mapDispatchToProps)(ScannerPage);\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScannerPage);","map":{"version":3,"sources":["C:/Users/Deepak/react_course/crwn-clothing/client/src/pages/scanner/scanner.component.jsx"],"names":["React","Component","axios","connect","CustomButton","Scan","addItem","selectCartItems","ScannerPage","state","scanning","results","_scan","setState","_onDetected","result","getProduct","response","get","codeResult","code","items","json","error","alert","then","res","data","render","mapStateToProps","createStructuredSelector","cartItems","mapDispatchToProps","dispatch","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,IAAP,MAAiB,0CAAjB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,eAAT,QAAgC,iCAAhC;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCQ,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,OAAO,EAAE;AAFH,KAD0B;;AAAA,SAMlCC,KANkC,GAM1B,MAAM;AACZ,WAAKC,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAxB,OAAd;AACD,KARiC;;AAAA,SAUlCI,WAVkC,GAUnBC,MAAD,IAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,UAAU,GAAG,YAAY;AAC7B,YAAI;AACF,gBAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CACrB,gCAAgCH,MAAM,CAACI,UAAP,CAAkBC,IAD7B,CAAvB;AAGA,gBAAMC,KAAK,GAAGJ,QAAQ,CAACK,IAAT,EAAd;AACA,iBAAOD,KAAP;AACD,SAND,CAME,OAAOE,KAAP,EAAc;AACdC,UAAAA,KAAK,CAACD,KAAD,CAAL,CADc,CACA;AACf;AACF,OAVD;;AAWAP,MAAAA,UAAU,CAACS,IAAX,CAAiBC,GAAD,IAASpB,OAAO,CAACoB,GAAG,CAACC,IAAL,CAAhC,EA1BwB,CA2BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,KAlEiC;AAAA;;AAoElCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAE,KAAKhB,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWC,QAAX,GAAsB,MAAtB,GAA+B,OADlC,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKD,KAAL,CAAWE,OAArC,CAJF,EAKG,KAAKF,KAAL,CAAWC,QAAX,gBAAsB,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKI,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAA+D,IALlE,CADF;AASD;;AA9EiC;;AAiFpC,MAAMe,eAAe,GAAGC,wBAAwB,CAAC;AAC/CC,EAAAA,SAAS,EAAExB;AADoC,CAAD,CAAhD,C,CAIA;AACA;;AACA,MAAMyB,kBAAkB,GAAIC,QAAD,KAAe;AACxC3B,EAAAA,OAAO,EAAG4B,IAAD,IAAUD,QAAQ,CAAC3B,OAAO,CAAC4B,IAAD,CAAR;AADa,CAAf,CAA3B;;AAIA,eAAe/B,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CxB,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\r\nimport Scan from \"../../components/scan/scan.component.jsx\";\r\nimport { addItem } from \"../../redux/cart/cart.actions\";\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\n\r\nclass ScannerPage extends Component {\r\n  state = {\r\n    scanning: false,\r\n    results: null,\r\n  };\r\n\r\n  _scan = () => {\r\n    this.setState({ scanning: !this.state.scanning });\r\n  };\r\n\r\n  _onDetected = (result) => {\r\n    //this.setState({ results: this.state.results.concat([result]) });\r\n    //this.setState({ results: result.codeResult.code });\r\n    // async function asyncFunc() {\r\n    //   try {\r\n    //     // fetch data from a url endpoint\r\n    //     const response = await axios.get(\r\n    //       \"http://localhost:5000/scan/\" + result.codeResult.code\r\n    //     );\r\n    //     return response;\r\n    //   } catch (error) {\r\n    //     alert(error); // catches both errors\r\n    //   }\r\n    // }\r\n    // asyncFunc().then((res) => this.setState({ item: res.data.data }));\r\n    const getProduct = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:5000/scan/\" + result.codeResult.code\r\n        );\r\n        const items = response.json();\r\n        return items;\r\n      } catch (error) {\r\n        alert(error); // catches both errors\r\n      }\r\n    };\r\n    getProduct.then((res) => addItem(res.data));\r\n    // let response = \"\";\r\n    // console.log(response);\r\n    // async function f() {\r\n    //   const response = await axios.get(\r\n    //     \"http://localhost:5000/scan/\" + result.codeResult.code\r\n    //   );\r\n    //   console.log(response);\r\n    // }\r\n\r\n    // response = f();\r\n    // console.log(response.data);\r\n    // addItem(response.data);\r\n\r\n    // fetch(\"http://localhost:5000/scan/\" + result.codeResult.code)\r\n    //   .then((res) => {\r\n    //     if (res.status !== 200) {\r\n    //       throw new Error(\"Failed to fetch status\");\r\n    //     }\r\n    //     return res.json();\r\n    //   })\r\n    //   .then((resData) => {\r\n    //     //addItem(item);\r\n    //     this.setState({ item: resData });\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n\r\n    //this.setState({ results: result.codeResult.code });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CustomButton type=\"button\" onClick={this._scan}>\r\n          {this.state.scanning ? \"Stop\" : \"Start\"}\r\n        </CustomButton>\r\n        <div className=\"results\">{this.state.results}</div>\r\n        {this.state.scanning ? <Scan onDetected={this._onDetected} /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n});\r\n\r\n//export default ScannerPage;\r\n//export default connect(null, mapDispatchToProps)(ScannerPage);\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScannerPage);\r\n"]},"metadata":{},"sourceType":"module"}