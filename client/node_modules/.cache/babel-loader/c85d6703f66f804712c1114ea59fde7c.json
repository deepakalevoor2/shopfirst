{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deepak\\\\react_course\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\scan\\\\scan.component.jsx\";\nimport React, { Component } from \"react\";\nimport Quagga from \"quagga\";\n\nclass Scan extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this._onDetected = result => {\n      this.props.onDetected(result);\n      Quagga.stop();\n    };\n  }\n\n  componentDidMount() {\n    Quagga.init({\n      inputStream: {\n        type: \"LiveStream\",\n        constraints: {\n          width: 640,\n          height: 480,\n          facingMode: \"environment\" // or user\n\n        }\n      },\n      locator: {\n        patchSize: \"medium\",\n        halfSample: true\n      },\n      numOfWorkers: 4,\n      decoder: {\n        readers: [\"code_128_reader\"]\n      },\n      locate: true\n    }, function (err) {\n      if (err) {\n        return console.log(err);\n      }\n\n      Quagga.start();\n    });\n    Quagga.onDetected(this._onDetected);\n  }\n\n  componentWillUnmount() {\n    Quagga.offDetected(this._offDetected);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"interactive\",\n      className: \"viewport\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default Scan;","map":{"version":3,"sources":["C:/Users/Deepak/react_course/crwn-clothing/client/src/components/scan/scan.component.jsx"],"names":["React","Component","Quagga","Scan","_onDetected","result","props","onDetected","stop","componentDidMount","init","inputStream","type","constraints","width","height","facingMode","locator","patchSize","halfSample","numOfWorkers","decoder","readers","locate","err","console","log","start","componentWillUnmount","offDetected","_offDetected","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAoC3BG,WApC2B,GAoCZC,MAAD,IAAY;AACxB,WAAKC,KAAL,CAAWC,UAAX,CAAsBF,MAAtB;AACAH,MAAAA,MAAM,CAACM,IAAP;AACD,KAvC0B;AAAA;;AAC3BC,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,MAAM,CAACQ,IAAP,CACE;AACEC,MAAAA,WAAW,EAAE;AACXC,QAAAA,IAAI,EAAE,YADK;AAEXC,QAAAA,WAAW,EAAE;AACXC,UAAAA,KAAK,EAAE,GADI;AAEXC,UAAAA,MAAM,EAAE,GAFG;AAGXC,UAAAA,UAAU,EAAE,aAHD,CAGgB;;AAHhB;AAFF,OADf;AASEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE,QADJ;AAEPC,QAAAA,UAAU,EAAE;AAFL,OATX;AAaEC,MAAAA,YAAY,EAAE,CAbhB;AAcEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE,CAAC,iBAAD;AADF,OAdX;AAiBEC,MAAAA,MAAM,EAAE;AAjBV,KADF,EAoBE,UAAUC,GAAV,EAAe;AACb,UAAIA,GAAJ,EAAS;AACP,eAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACD;;AACDtB,MAAAA,MAAM,CAACyB,KAAP;AACD,KAzBH;AA2BAzB,IAAAA,MAAM,CAACK,UAAP,CAAkB,KAAKH,WAAvB;AACD;;AAEDwB,EAAAA,oBAAoB,GAAG;AACrB1B,IAAAA,MAAM,CAAC2B,WAAP,CAAmB,KAAKC,YAAxB;AACD;;AAODC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AA3C0B;;AA8C7B,eAAe5B,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Quagga from \"quagga\";\r\n\r\nclass Scan extends Component {\r\n  componentDidMount() {\r\n    Quagga.init(\r\n      {\r\n        inputStream: {\r\n          type: \"LiveStream\",\r\n          constraints: {\r\n            width: 640,\r\n            height: 480,\r\n            facingMode: \"environment\", // or user\r\n          },\r\n        },\r\n        locator: {\r\n          patchSize: \"medium\",\r\n          halfSample: true,\r\n        },\r\n        numOfWorkers: 4,\r\n        decoder: {\r\n          readers: [\"code_128_reader\"],\r\n        },\r\n        locate: true,\r\n      },\r\n      function (err) {\r\n        if (err) {\r\n          return console.log(err);\r\n        }\r\n        Quagga.start();\r\n      }\r\n    );\r\n    Quagga.onDetected(this._onDetected);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Quagga.offDetected(this._offDetected);\r\n  }\r\n\r\n  _onDetected = (result) => {\r\n    this.props.onDetected(result);\r\n    Quagga.stop();\r\n  };\r\n\r\n  render() {\r\n    return <div id=\"interactive\" className=\"viewport\" />;\r\n  }\r\n}\r\n\r\nexport default Scan;\r\n"]},"metadata":{},"sourceType":"module"}