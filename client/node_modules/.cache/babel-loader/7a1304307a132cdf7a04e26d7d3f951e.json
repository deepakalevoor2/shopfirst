{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deepak\\\\react_course\\\\crwn-clothing\\\\client\\\\src\\\\pages\\\\scanner\\\\scanner.component.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\nimport Scan from \"../../components/scan/scan.component.jsx\";\nimport { addItem } from \"../../redux/cart/cart.actions\";\n\nclass ScannerPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scanning: false,\n      results: null,\n      item: null\n    };\n\n    this._scan = () => {\n      this.setState({\n        scanning: !this.state.scanning\n      });\n    };\n\n    this._onDetected = result => {\n      //this.setState({ results: this.state.results.concat([result]) });\n      this.setState({\n        results: result.codeResult.code\n      });\n\n      async function asyncFunc() {\n        try {\n          // fetch data from a url endpoint\n          const response = await axios.get(\"http://localhost:5000/scan/\" + result.codeResult.code);\n          return response;\n        } catch (error) {\n          alert(error); // catches both errors\n        }\n      }\n\n      asyncFunc().then(res => console.log(res.data.data)); // let response = \"\";\n      // console.log(response);\n      // async function f() {\n      //   const response = await axios.get(\n      //     \"http://localhost:5000/scan/\" + result.codeResult.code\n      //   );\n      //   console.log(response);\n      // }\n      // response = f();\n      // console.log(response.data);\n      // addItem(response.data);\n      // fetch(\"http://localhost:5000/scan/\" + result.codeResult.code)\n      //   .then((res) => {\n      //     if (res.status !== 200) {\n      //       throw new Error(\"Failed to fetch status\");\n      //     }\n      //     return res.json();\n      //   })\n      //   .then((resData) => {\n      //     //addItem(item);\n      //     this.setState({ item: resData });\n      //   })\n      //   .catch((err) => {\n      //     console.log(err);\n      //   });\n      //this.setState({ results: result.codeResult.code });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: this._scan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, this.state.scanning ? \"Stop\" : \"Start\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, this.state.results), this.state.scanning ? /*#__PURE__*/React.createElement(Scan, {\n      onDetected: this._onDetected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }\n    }) : null);\n  }\n\n} //export default ScannerPage;\n//export default connect(null, mapDispatchToProps)(ScannerPage);\n\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(ScannerPage);","map":{"version":3,"sources":["C:/Users/Deepak/react_course/crwn-clothing/client/src/pages/scanner/scanner.component.jsx"],"names":["React","Component","axios","connect","CustomButton","Scan","addItem","ScannerPage","state","scanning","results","item","_scan","setState","_onDetected","result","codeResult","code","asyncFunc","response","get","error","alert","then","res","console","log","data","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,IAAP,MAAiB,0CAAjB;AACA,SAASC,OAAT,QAAwB,+BAAxB;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCO,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,OAAO,EAAE,IAFH;AAGNC,MAAAA,IAAI,EAAE;AAHA,KAD0B;;AAAA,SAOlCC,KAPkC,GAO1B,MAAM;AACZ,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAxB,OAAd;AACD,KATiC;;AAAA,SAWlCK,WAXkC,GAWnBC,MAAD,IAAY;AACxB;AACA,WAAKF,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEK,MAAM,CAACC,UAAP,CAAkBC;AAA7B,OAAd;;AACA,qBAAeC,SAAf,GAA2B;AACzB,YAAI;AACF;AACA,gBAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACrB,gCAAgCL,MAAM,CAACC,UAAP,CAAkBC,IAD7B,CAAvB;AAGA,iBAAOE,QAAP;AACD,SAND,CAME,OAAOE,KAAP,EAAc;AACdC,UAAAA,KAAK,CAACD,KAAD,CAAL,CADc,CACA;AACf;AACF;;AACDH,MAAAA,SAAS,GAAGK,IAAZ,CAAkBC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASA,IAArB,CAA1B,EAdwB,CAexB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,KAvDiC;AAAA;;AAyDlCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAE,KAAKhB,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWC,QAAX,GAAsB,MAAtB,GAA+B,OADlC,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKD,KAAL,CAAWE,OAArC,CAJF,EAKG,KAAKF,KAAL,CAAWC,QAAX,gBAAsB,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,GAA+D,IALlE,CADF;AASD;;AAnEiC,C,CAsEpC;AACA;;;AACA,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxCxB,EAAAA,OAAO,EAAGK,IAAD,IAAUmB,QAAQ,CAACxB,OAAO,CAACK,IAAD,CAAR;AADa,CAAf,CAA3B;;AAIA,eAAeR,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCtB,WAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\r\nimport Scan from \"../../components/scan/scan.component.jsx\";\r\nimport { addItem } from \"../../redux/cart/cart.actions\";\r\n\r\nclass ScannerPage extends Component {\r\n  state = {\r\n    scanning: false,\r\n    results: null,\r\n    item: null,\r\n  };\r\n\r\n  _scan = () => {\r\n    this.setState({ scanning: !this.state.scanning });\r\n  };\r\n\r\n  _onDetected = (result) => {\r\n    //this.setState({ results: this.state.results.concat([result]) });\r\n    this.setState({ results: result.codeResult.code });\r\n    async function asyncFunc() {\r\n      try {\r\n        // fetch data from a url endpoint\r\n        const response = await axios.get(\r\n          \"http://localhost:5000/scan/\" + result.codeResult.code\r\n        );\r\n        return response;\r\n      } catch (error) {\r\n        alert(error); // catches both errors\r\n      }\r\n    }\r\n    asyncFunc().then((res) => console.log(res.data.data));\r\n    // let response = \"\";\r\n    // console.log(response);\r\n    // async function f() {\r\n    //   const response = await axios.get(\r\n    //     \"http://localhost:5000/scan/\" + result.codeResult.code\r\n    //   );\r\n    //   console.log(response);\r\n    // }\r\n\r\n    // response = f();\r\n    // console.log(response.data);\r\n    // addItem(response.data);\r\n\r\n    // fetch(\"http://localhost:5000/scan/\" + result.codeResult.code)\r\n    //   .then((res) => {\r\n    //     if (res.status !== 200) {\r\n    //       throw new Error(\"Failed to fetch status\");\r\n    //     }\r\n    //     return res.json();\r\n    //   })\r\n    //   .then((resData) => {\r\n    //     //addItem(item);\r\n    //     this.setState({ item: resData });\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n\r\n    //this.setState({ results: result.codeResult.code });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CustomButton type=\"button\" onClick={this._scan}>\r\n          {this.state.scanning ? \"Stop\" : \"Start\"}\r\n        </CustomButton>\r\n        <div className=\"results\">{this.state.results}</div>\r\n        {this.state.scanning ? <Scan onDetected={this._onDetected} /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//export default ScannerPage;\r\n//export default connect(null, mapDispatchToProps)(ScannerPage);\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ScannerPage);\r\n"]},"metadata":{},"sourceType":"module"}